[{"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/index.js":"1","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/App.js":"2","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Profile.jsx":"3","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Edu.jsx":"4","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Certificates.jsx":"5","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Interests.jsx":"6","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Skills.jsx":"7","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Languages.jsx":"8","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Options/Options.jsx":"9","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Input_helpers.jsx":"10","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Work.jsx":"11","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Placeholders.jsx":"12","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Textarea_helpers.jsx":"13","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/iterator.jsx":"14","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Scripts/pdf.js":"15"},{"size":227,"mtime":1617673796961,"results":"16","hashOfConfig":"17"},{"size":3304,"mtime":1617680683002,"results":"18","hashOfConfig":"17"},{"size":5667,"mtime":1617673796961,"results":"19","hashOfConfig":"17"},{"size":4988,"mtime":1617673796961,"results":"20","hashOfConfig":"17"},{"size":3700,"mtime":1617673796961,"results":"21","hashOfConfig":"17"},{"size":3505,"mtime":1617673796961,"results":"22","hashOfConfig":"17"},{"size":2003,"mtime":1617673796961,"results":"23","hashOfConfig":"17"},{"size":3322,"mtime":1617673796961,"results":"24","hashOfConfig":"17"},{"size":4155,"mtime":1617673796961,"results":"25","hashOfConfig":"17"},{"size":501,"mtime":1617673796961,"results":"26","hashOfConfig":"17"},{"size":8495,"mtime":1617673796961,"results":"27","hashOfConfig":"17"},{"size":959,"mtime":1617673796961,"results":"28","hashOfConfig":"17"},{"size":487,"mtime":1617673796961,"results":"29","hashOfConfig":"17"},{"size":2223,"mtime":1617673796961,"results":"30","hashOfConfig":"17"},{"size":635,"mtime":1617679788010,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"zvt8xt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/index.js",[],["65","66"],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/App.js",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Profile.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Edu.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Certificates.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Interests.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Skills.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Optional/Languages.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Options/Options.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Input_helpers.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Main/Work.jsx",["67"],"import React from 'react';\nimport { Placeholders } from '../Form/Placeholders';\nimport Input from '../Form/Input_helpers';\nimport Textarea from '../Form/Textarea_helpers';\nimport { IteratorComponent, IteratorComponent2 } from '../Form/iterator';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Work extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            experience: [{\n                yearStart1: 2019,\n                yearEnd1: 'present',\n                companyName1: 'No Name Company From Somewhere',\n                companyPos1: 'Computer Programmer',\n                notes: ['Enter important finished tasks, achievement and projects that may be beneficial for your professional credentials']\n            }]\n        }\n        //bind methods to this\n        this.handleFieldChangeWithObj = this.handleFieldChangeWithObj.bind(this);\n        this.handleFieldChangeWithArrinArr = this.handleFieldChangeWithArrinArr.bind(this);\n        this.addNewStateObj = this.addNewStateObj.bind(this);\n        this.addNewNote = this.addNewNote.bind(this);\n        this.rmvLatestStateObj = this.rmvLatestStateObj.bind(this);\n        this.rmvLatestNote = this.rmvLatestNote.bind(this);\n        this.indexIsolator = this.indexIsolator.bind(this);\n    }\n\n    //A seperate field change handler that updates the state \n    //with array of obj property after onChange event\n    handleFieldChangeWithObj(e) {\n        let name = e.target.name;\n        const arr = name.split(/[.[\\]]/);\n        let splitName = name.split('.');\n        let index = arr[1];\n        let state = arr[0];\n        let stateProp = splitName[1];\n        let copyArray = [...this.state.experience]; //a copy of state array\n        //update the state inside the array\n        copyArray[index] = { ...copyArray[index], [`${stateProp}`]: e.target.value }\n        //replace the array of objects state with the updated one\n        this.setState({\n            [`${state}`]: copyArray\n        })\n    }\n    handleFieldChangeWithArrinArr(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        let arr = name.split(/[.[\\]]/);\n        arr = arr.filter(x => x !== \"\"); //clearing whitespaces\n        const index = arr[1]; //index of the first array\n        const stateInArr = arr[2];\n        const arrIndex = arr[3]; //index of arr inside state arr\n        const state = arr[0]; //state name of the first arr\n        //copy of the existing notes\n        let copyArray = [...this.state.experience[index].notes];\n\n        copyArray[arrIndex] = value;\n        this.setState(prevState => ({\n            ...prevState,\n            [state]: [{\n                ...prevState.experience[index],\n                [stateInArr]: copyArray //overwrite the current notes with the updated version\n            }]\n        }))\n        console.log(index);\n    }\n    //add new state obj\n    addNewStateObj(e) {\n        e.preventDefault();\n        const len = this.state.experience.length;\n        this.setState(prevState => ({\n            //default names and values for newly fresh states\n            experience: [...prevState.experience, {\n                [`yearStart${len + 1}`]: '',\n                [`yearEnd${len + 1}`]: '',\n                [`companyName${len + 1}`]: '',\n                [`companyPos${len + 1}`]: '',\n                [`notes`]: [''],\n            }]\n        }))\n    }\n    addNewNote(e) {\n        e.preventDefault();\n        const index = this.indexIsolator(e);\n        const newNote = this.state.experience[index].notes.concat('');\n        this.setState(prevState => ({\n            experience: [{\n                ...prevState.experience[index],\n                notes: newNote //add an additional element\n            }]\n        }))\n    }\n    rmvLatestStateObj(e) {\n        e.preventDefault();\n        //remove the last item from the array of state objects\n        this.state.experience.splice(this.state.experience.length - 1, 1);\n        this.setState(this.state) //forces to rerender the component\n    }\n    rmvLatestNote(e) {\n        e.preventDefault();\n        const index = this.indexIsolator(e);\n        this.state.experience[index].notes.splice(this.state.experience[index].notes.length - 1, 1);\n        this.setState(this.state); //forces to rerender the component\n    }\n    indexIsolator(e) {\n        const id = e.target.id;\n        //isolating the index from the id\n        let index = id.split(\"\").filter(function (val) {\n            return /^[\\d]+$/.test(val);\n        }).join(\"\");\n        return parseInt(index);\n    }\n    render() {\n        const { toggleVisibility } = this.props;\n        const iteratorComponent = <IteratorComponent valInfo=\"work experiences\" onAdd={this.addNewStateObj} onRmv={this.rmvLatestStateObj} />\n        let experience = this.state.experience;\n        console.log(experience);\n        const iterableComponent = experience.map((exp, index) => {\n            const id = index + 1;\n            const notes = exp.notes;\n            const iterableNotes = notes.map((note, i) => {\n                const idNote = i + 1;\n                //It's either a textarea or a para based on the value of the boolean\n                if (!toggleVisibility) {\n                    return (\n                        <p key={0 - idNote} className=\"exp-notes-para\">\n                            {note}\n                        </p>\n                    );\n                }\n                return (\n                    <Textarea\n                        t=\"Text\"\n                        id={`exp${id}-task${idNote}`}\n                        cn=\"exp-notes-ta\"\n                        name={`experience[${index}].notes[${i}]`}\n                        val={note}\n                        ph={Placeholders.experiences[0].achievements}\n                        onChange={this.handleFieldChangeWithArrinArr}\n                    />\n                );\n            });\n            return (\n                <div key={id} id={`exp-info${id}`} className=\"exp-info\">\n                    <div id={`exp-dates${id}`} className=\"exp-dates\">\n                        <Input\n                            t=\"Text\"\n                            id={`exp-start-year${id}`}\n                            cn=\"exp-start-year\"\n                            name={`experience[${index}].yearStart${id}`}\n                            val={exp.[`yearStart${id}`]}\n                            ph={Placeholders.experiences[0].yearStart}\n                            onChange={this.handleFieldChangeWithObj}\n                        />\n                        <p>-</p>\n                        <Input\n                            t=\"Text\"\n                            id={`exp-end-year${id}`}\n                            cn=\"exp-end-year\"\n                            name={`experience[${index}].yearEnd${id}`}\n                            val={exp.[`yearEnd${id}`]}\n                            ph={Placeholders.experiences[0].yearEnd}\n                            onChange={this.handleFieldChangeWithObj}\n                        />\n                    </div>\n                    <Input\n                        t=\"Text\"\n                        id={`exp-name${id}`}\n                        cn=\"exp-name\"\n                        name={`experience[${index}].companyName${id}`}\n                        val={exp.[`companyName${id}`]}\n                        ph={Placeholders.experiences[0].name}\n                        onChange={this.handleFieldChangeWithObj}\n                    />\n                    <Input\n                        t=\"Text\"\n                        id={`exp-position${id}`}\n                        cn=\"exp-position\"\n                        name={`experience[${index}].companyPos${id}`}\n                        val={exp.[`companyPos${id}`]}\n                        ph={Placeholders.experiences[0].position}\n                        onChange={this.handleFieldChangeWithObj}\n                    />\n                    {iterableNotes}\n                    {toggleVisibility ?\n                        <IteratorComponent2 id={`noteManagement${index}`} valInfo=\"notes\" onAdd={this.addNewNote} onRmv={this.rmvLatestNote} />\n                        : null}\n                </div>\n            );\n        })\n        return (\n            <div id=\"exp-container\" className=\"main-containers\">\n                <p className=\"exp-header-texts\">Work Experiences</p>\n                {iterableComponent}\n                {toggleVisibility ? iteratorComponent : null}\n            </div>\n        );\n    }\n}\n\nexport default Work;","/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Placeholders.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/Textarea_helpers.jsx",[],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Components/Form/iterator.jsx",[],["68","69"],"/home/law911012eqw/sabo/TOP/prj/cv-maker-application/src/Scripts/pdf.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":16,"nodeType":"76","messageId":"77","endLine":6,"endColumn":22},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar",["80"],["81"],"no-global-assign","no-unsafe-negation"]