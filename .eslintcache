[{"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/index.js":"1","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/App.js":"2","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Profile.jsx":"3","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Edu.jsx":"4","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Input_helpers.jsx":"5","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Work.jsx":"6","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Textarea_helpers.jsx":"7","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/iterator.jsx":"8","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Skills.jsx":"9","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Certificates.jsx":"10","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Placeholders.jsx":"11","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Interests.jsx":"12","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Options/Options.jsx":"13","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Languages.jsx":"14"},{"size":227,"mtime":1612658055213,"results":"15","hashOfConfig":"16"},{"size":2946,"mtime":1613073435615,"results":"17","hashOfConfig":"16"},{"size":5723,"mtime":1613092064379,"results":"18","hashOfConfig":"16"},{"size":4988,"mtime":1613082554525,"results":"19","hashOfConfig":"16"},{"size":501,"mtime":1612916580346,"results":"20","hashOfConfig":"16"},{"size":9140,"mtime":1613090278477,"results":"21","hashOfConfig":"16"},{"size":452,"mtime":1612829107880,"results":"22","hashOfConfig":"16"},{"size":2223,"mtime":1613090278413,"results":"23","hashOfConfig":"16"},{"size":2003,"mtime":1613082470697,"results":"24","hashOfConfig":"16"},{"size":3744,"mtime":1613082913121,"results":"25","hashOfConfig":"16"},{"size":959,"mtime":1612829310479,"results":"26","hashOfConfig":"16"},{"size":3549,"mtime":1613082907869,"results":"27","hashOfConfig":"16"},{"size":4155,"mtime":1613091987631,"results":"28","hashOfConfig":"16"},{"size":3322,"mtime":1613082521177,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1d6bxmb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/index.js",[],["60","61"],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/App.js",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Profile.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Edu.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Input_helpers.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Main/Work.jsx",["62","63","64"],"import React from 'react';\nimport { Placeholders } from '../Form/Placeholders';\nimport Input from '../Form/Input_helpers';\nimport Textarea from '../Form/Textarea_helpers';\nimport { IteratorComponent, IteratorComponent2 } from '../Form/iterator';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Work extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            experience: [{\n                yearStart1: 2019,\n                yearEnd1: 'present',\n                companyName1: 'No Name Company From Somewhere',\n                companyPos1: 'Computer Programmer',\n                notes: ['Enter important finished tasks, achievement and projects that may be beneficial for your professional credentials','as','d']\n            }]\n        }\n        //bind methods to this\n        this.handleFieldChangeWithObj = this.handleFieldChangeWithObj.bind(this);\n        this.handleFieldChangeWithArrinArr = this.handleFieldChangeWithArrinArr.bind(this);\n        this.addNewStateObj = this.addNewStateObj.bind(this);\n        this.addNewNote = this.addNewNote.bind(this);\n        this.rmvLatestStateObj = this.rmvLatestStateObj.bind(this);\n        this.rmvLatestNote = this.rmvLatestNote.bind(this);\n        this.indexIsolator = this.indexIsolator.bind(this);\n    }\n\n    //A seperate field change handler that updates the state \n    //with array of obj property after onChange event\n    handleFieldChangeWithObj(e) {\n        let name = e.target.name;\n        const arr = name.split(/[.[\\]]/);\n        let splitName = name.split('.');\n        let index = arr[1];\n        let state = arr[0];\n        let stateProp = splitName[1];\n        let copyArray = [...this.state.experience]; //a copy of state array\n        //update the state inside the array\n        copyArray[index] = { ...copyArray[index], [`${stateProp}`]: e.target.value }\n        //replace the array of objects state with the updated one\n        this.setState({\n            [`${state}`]: copyArray\n        })\n    }\n    handleFieldChangeWithArrinArr(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        let arr = name.split(/[.[\\]]/);\n        arr = arr.filter (x => x !== \"\"); //clearing whitespaces\n        const index = arr[1]; //index of the first array\n        const stateInArr = arr[2];\n        const arrIndex = arr[3]; //index of arr inside state arr\n        const state = arr[0]; //state name of the first arr\n        const stateProp = `${stateInArr}[${arrIndex}]`;\n        const copyArray = [...this.state.experience[index].notes];\n        //copyArray[arrIndex] = e.target.value;\n        // this.setState({\n        //     ...this.state,\n        //     experience: [{\n        //         ...this.state.experience[index],\n        //         notes: [\n        //             ...this.state.experience[index].notes, \n        //             e.target.value\n        //         ],\n        //     }]\n        // });\n        copyArray[arrIndex] = value;\n        this.setState({\n            experience: [{\n                ...this.state.experience[index].notes, \n                copyArray\n            }]\n        })\n        console.log(copyArray);\n    }\n    //add new state obj\n    addNewStateObj(e) {\n        e.preventDefault();\n        const len = this.state.experience.length;\n        this.setState(prevState => ({\n            //default names and values for newly fresh states\n            experience: [...prevState.experience, {\n                [`yearStart${len + 1}`]: '',\n                [`yearEnd${len + 1}`]: '',\n                [`companyName${len + 1}`]: '',\n                [`companyPos${len + 1}`]: '',\n                [`notes`]: [''],\n            }]\n        }))\n    }\n    addNewNote(e) {\n        e.preventDefault();\n        const index = this.indexIsolator(e);\n        const newNote = this.state.experience[index].notes.concat('');\n        this.setState({\n                ...this.state.experience[index], \n                    newNote\n        });\n        // this.setState({\n        //     notes: [...this.state.experience[index].notes, newNote]\n        // })\n        console.log(newNote[0]);\n        console.log(this.state.experience[index].notes)\n    }\n    rmvLatestStateObj(e) {\n        e.preventDefault();\n        //remove the last item from the array of state objects\n        this.state.experience.splice(this.state.experience.length - 1, 1);\n        this.setState(this.state) //forces to rerender the component\n    }\n    rmvLatestNote(e) {\n        e.preventDefault();\n        const index = this.indexIsolator(e);\n        this.state.experience[index].notes.splice(this.state.experience[index].notes.length - 1, 1);\n        this.setState(this.state); //forces to rerender the component\n    }\n    indexIsolator(e) {\n        const id = e.target.id;\n        //isolating the index from the id\n        let index = id.split(\"\").filter(function(val){\n            return /^[\\d]+$/.test(val);\n        }).join(\"\");\n        return parseInt(index);\n    }\n    render() {\n        const { toggleVisibility } = this.props;\n        const iteratorComponent = <IteratorComponent valInfo=\"work experiences\" onAdd={this.addNewStateObj} onRmv={this.rmvLatestStateObj} />\n        let experience = this.state.experience;\n        const iterableComponent = experience.map((exp, index) => {\n            this.props.componentDidMount();\n            const id = index + 1;\n            const notes = exp.notes;\n            console.log(notes);\n            const iterableNotes = notes.map((note,i)=>{\n                const idNote = i + 1;\n                console.log(note);\n                //It's either a textarea or a para based on the value of the boolean\n                if(!toggleVisibility) {\n                    return (\n                        <p key={0 - idNote} className=\"exp-notes-para\">\n                            {note}\n                        </p>\n                    );\n                }\n                return (\n                    <Textarea\n                        t=\"Text\"\n                        id={`exp${id}-task${idNote}`}\n                        cn=\"exp-notes-ta\"\n                        name={`experience[${index}].notes[${i}]`}\n                        val={note}\n                        ph={Placeholders.experiences[0].achievements}\n                        onChange={this.handleFieldChangeWithArrinArr}\n                    />\n                );\n            });\n            return (\n                <div key={id} id={`exp-info${id}`} className=\"exp-info\">\n                    <div id={`exp-dates${id}`} className=\"exp-dates\">\n                        <Input\n                            t=\"Text\"\n                            id={`exp-start-year${id}`}\n                            cn=\"exp-start-year\"\n                            name={`experience[${index}].yearStart${id}`}\n                            val={exp.[`yearStart${id}`]}\n                            ph={Placeholders.experiences[0].yearStart}\n                            onChange={this.handleFieldChangeWithObj}\n                        />\n                        <p>-</p>\n                        <Input\n                            t=\"Text\"\n                            id={`exp-end-year${id}`}\n                            cn=\"exp-end-year\"\n                            name={`experience[${index}].yearEnd${id}`}\n                            val={exp.[`yearEnd${id}`]}\n                            ph={Placeholders.experiences[0].yearEnd}\n                            onChange={this.handleFieldChangeWithObj}\n                        />\n                    </div>\n                    <Input\n                        t=\"Text\"\n                        id={`exp-name${id}`}\n                        cn=\"exp-name\"\n                        name={`experience[${index}].companyName${id}`}\n                        val={exp.[`companyName${id}`]}\n                        ph={Placeholders.experiences[0].name}\n                        onChange={this.handleFieldChangeWithObj}\n                    />\n                    <Input\n                        t=\"Text\"\n                        id={`exp-position${id}`}\n                        cn=\"exp-position\"\n                        name={`experience[${index}].companyPos${id}`}\n                        val={exp.[`companyPos${id}`]}\n                        ph={Placeholders.experiences[0].position}\n                        onChange={this.handleFieldChangeWithObj}\n                    />\n                    {iterableNotes}\n                    {toggleVisibility ? \n                    <IteratorComponent2 id={`noteManagement${index}`} valInfo=\"notes\" onAdd={this.addNewNote} onRmv={this.rmvLatestNote}/> \n                    : null}\n                </div>\n            );\n        })\n        return (\n            <div id=\"exp-container\" className=\"main-containers\">\n                <p className=\"exp-header-texts\">Work Experiences</p>\n                {iterableComponent}\n                {toggleVisibility ? iteratorComponent : null}\n            </div>\n        );\n    }\n}\n\nexport default Work;","/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Textarea_helpers.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/iterator.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Skills.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Certificates.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Form/Placeholders.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Interests.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Options/Options.jsx",[],"/home/law911012eqw/github-law911012eqw/the_odin_project/prj/cv-maker-application/src/Components/Optional/Languages.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":16,"nodeType":"71","messageId":"72","endLine":6,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":56,"column":15,"nodeType":"71","messageId":"72","endLine":56,"endColumn":20},{"ruleId":"69","severity":1,"message":"74","line":57,"column":15,"nodeType":"71","messageId":"72","endLine":57,"endColumn":24},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'stateProp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]